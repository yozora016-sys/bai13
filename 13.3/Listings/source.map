Component: Arm Compiler for Embedded 6.24 Tool: armlink [5f371500]

==============================================================================

Section Cross References

    main.o(.text.main) refers to main.o(.text.UART_Config) for UART_Config
    main.o(.text.main) refers to queue_1.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.main) refers to main.o(.text.Task1) for Task1
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks_1.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.Task2) for Task2
    main.o(.text.main) refers to tasks_1.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.UART_Config) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    main.o(.text.UART_Config) refers to stm32f10x_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.UART_Config) refers to stm32f10x_usart.o(.text.USART_Init) for USART_Init
    main.o(.text.UART_Config) refers to stm32f10x_usart.o(.text.USART_Cmd) for USART_Cmd
    main.o(.ARM.exidx.text.UART_Config) refers to main.o(.text.UART_Config) for [Anonymous Symbol]
    main.o(.text.Task1) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.Task1) refers to queue_1.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Task1) refers to main.o(.rodata.str1.1) for .L.str.2
    main.o(.text.Task1) refers to main.o(.text.UART_SendString) for UART_SendString
    main.o(.text.Task1) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.Task1) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Task1) refers to main.o(.text.Task1) for [Anonymous Symbol]
    main.o(.text.Task2) refers to main.o(.bss.xMutex) for xMutex
    main.o(.text.Task2) refers to queue_1.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.Task2) refers to main.o(.rodata.str1.1) for .L.str.3
    main.o(.text.Task2) refers to main.o(.text.UART_SendString) for UART_SendString
    main.o(.text.Task2) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.Task2) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.Task2) refers to main.o(.text.Task2) for [Anonymous Symbol]
    main.o(.text.UART_SendString) refers to stm32f10x_usart.o(.text.USART_SendData) for USART_SendData
    main.o(.ARM.exidx.text.UART_SendString) refers to main.o(.text.UART_SendString) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text.os_kernel_is_active) refers to clib_arm.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    clib_arm.o(.text.os_kernel_is_active) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.ARM.exidx.text.os_kernel_is_active) refers to clib_arm.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to queue_1.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_initialize) refers to queue_1.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_acquire) refers to queue_1.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_release) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue_1.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port_1.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.1) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks_1.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelLock) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks_1.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadNew) refers to tasks_1.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks_1.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetName) refers to tasks_1.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetState) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks_1.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks_1.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks_1.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks_1.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadResume) refers to tasks_1.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks_1.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks_1.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4_1.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks_1.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks_1.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks_1.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks_1.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osDelay) refers to tasks_1.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osDelayUntil) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks_1.o(.text.vTaskDelayUntil) for vTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerNew) refers to heap_4_1.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers_1.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers_1.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers_1.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerGetName) refers to timers_1.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerStart) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerStop) refers to timers_1.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers_1.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osTimerDelete) refers to timers_1.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups_1.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups_1.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups_1.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups_1.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups_1.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups_1.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups_1.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups_1.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups_1.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups_1.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups_1.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexNew) refers to queue_1.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue_1.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexAcquire) refers to queue_1.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.text.osMutexAcquire) refers to queue_1.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexRelease) refers to queue_1.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.text.osMutexRelease) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue_1.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMutexDelete) refers to queue_1.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue_1.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue_1.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue_1.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue_1.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue_1.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue_1.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue_1.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue_1.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue_1.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue_1.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue_1.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue_1.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue_1.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue_1.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue_1.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue_1.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue_1.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue_1.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue_1.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue_1.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue_1.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4_1.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue_1.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue_1.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue_1.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue_1.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue_1.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue_1.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue_1.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue_1.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue_1.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue_1.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig) refers to misc.o(.text.NVIC_PriorityGroupConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_Init) refers to misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SetVectorTable) refers to misc.o(.text.NVIC_SetVectorTable) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.text.GPIO_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to stm32f10x_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.text.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit) refers to stm32f10x_gpio.o(.text.GPIO_AFIODeInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Init) refers to stm32f10x_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to stm32f10x_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to stm32f10x_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to stm32f10x_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to stm32f10x_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to stm32f10x_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to stm32f10x_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Write) refers to stm32f10x_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to stm32f10x_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputConfig) refers to stm32f10x_gpio.o(.text.GPIO_EventOutputConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputCmd) refers to stm32f10x_gpio.o(.text.GPIO_EventOutputCmd) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinRemapConfig) refers to stm32f10x_gpio.o(.text.GPIO_PinRemapConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EXTILineConfig) refers to stm32f10x_gpio.o(.text.GPIO_EXTILineConfig) for [Anonymous Symbol]
    stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ETH_MediaInterfaceConfig) refers to stm32f10x_gpio.o(.text.GPIO_ETH_MediaInterfaceConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to stm32f10x_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSEConfig) refers to stm32f10x_rcc.o(.text.RCC_HSEConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to stm32f10x_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to stm32f10x_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to stm32f10x_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLConfig) refers to stm32f10x_rcc.o(.text.RCC_PLLConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLCmd) refers to stm32f10x_rcc.o(.text.RCC_PLLCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK1Config) refers to stm32f10x_rcc.o(.text.RCC_PCLK1Config) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK2Config) refers to stm32f10x_rcc.o(.text.RCC_PCLK2Config) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to stm32f10x_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_USBCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSEConfig) refers to stm32f10x_rcc.o(.text.RCC_LSEConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to stm32f10x_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig) refers to stm32f10x_rcc.o(.text.RCC_RTCCLKConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd) refers to stm32f10x_rcc.o(.text.RCC_RTCCLKCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.rodata.APBAHBPrescTable) for APBAHBPrescTable
    stm32f10x_rcc.o(.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.rodata.ADCPrescTable) for ADCPrescTable
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd) refers to stm32f10x_rcc.o(.text.RCC_BackupResetCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to stm32f10x_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to stm32f10x_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to stm32f10x_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to stm32f10x_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to stm32f10x_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    stm32f10x_usart.o(.text.USART_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(.text.USART_DeInit) refers to stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_usart.o(.ARM.exidx.text.USART_DeInit) refers to stm32f10x_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.text.USART_Init) refers to stm32f10x_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f10x_usart.o(.ARM.exidx.text.USART_Init) refers to stm32f10x_usart.o(.text.USART_Init) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_StructInit) refers to stm32f10x_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClockInit) refers to stm32f10x_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to stm32f10x_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_Cmd) refers to stm32f10x_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ITConfig) refers to stm32f10x_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_DMACmd) refers to stm32f10x_usart.o(.text.USART_DMACmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetAddress) refers to stm32f10x_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_WakeUpConfig) refers to stm32f10x_usart.o(.text.USART_WakeUpConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiverWakeUpCmd) refers to stm32f10x_usart.o(.text.USART_ReceiverWakeUpCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig) refers to stm32f10x_usart.o(.text.USART_LINBreakDetectLengthConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_LINCmd) refers to stm32f10x_usart.o(.text.USART_LINCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SendData) refers to stm32f10x_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to stm32f10x_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SendBreak) refers to stm32f10x_usart.o(.text.USART_SendBreak) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to stm32f10x_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SetPrescaler) refers to stm32f10x_usart.o(.text.USART_SetPrescaler) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardCmd) refers to stm32f10x_usart.o(.text.USART_SmartCardCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd) refers to stm32f10x_usart.o(.text.USART_SmartCardNACKCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to stm32f10x_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to stm32f10x_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to stm32f10x_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to stm32f10x_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to stm32f10x_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to stm32f10x_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to stm32f10x_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to stm32f10x_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    stm32f10x_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to stm32f10x_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port_1.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port_1.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    event_groups_1.o(.text.xEventGroupCreateStatic) refers to list_1.o(.text.vListInitialise) for vListInitialise
    event_groups_1.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups_1.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups_1.o(.text.xEventGroupCreate) refers to heap_4_1.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups_1.o(.text.xEventGroupCreate) refers to list_1.o(.text.vListInitialise) for vListInitialise
    event_groups_1.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups_1.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups_1.o(.text.xEventGroupSync) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups_1.o(.text.xEventGroupSync) refers to event_groups_1.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups_1.o(.text.xEventGroupSync) refers to tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups_1.o(.text.xEventGroupSync) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups_1.o(.text.xEventGroupSync) refers to tasks_1.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups_1.o(.text.xEventGroupSync) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups_1.o(.text.xEventGroupSync) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups_1.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups_1.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups_1.o(.text.xEventGroupSetBits) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups_1.o(.text.xEventGroupSetBits) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups_1.o(.text.xEventGroupSetBits) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups_1.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups_1.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups_1.o(.text.xEventGroupWaitBits) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups_1.o(.text.xEventGroupWaitBits) refers to event_groups_1.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups_1.o(.text.xEventGroupWaitBits) refers to tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups_1.o(.text.xEventGroupWaitBits) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups_1.o(.text.xEventGroupWaitBits) refers to tasks_1.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups_1.o(.text.xEventGroupWaitBits) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups_1.o(.text.xEventGroupWaitBits) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups_1.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups_1.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups_1.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups_1.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups_1.o(.text.xEventGroupClearBits) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups_1.o(.text.xEventGroupClearBits) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups_1.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups_1.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups_1.o(.text.xEventGroupClearBitsFromISR) refers to event_groups_1.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups_1.o(.text.xEventGroupClearBitsFromISR) refers to timers_1.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups_1.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups_1.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups_1.o(.text.vEventGroupClearBitsCallback) refers to event_groups_1.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups_1.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups_1.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups_1.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups_1.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups_1.o(.text.vEventGroupDelete) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups_1.o(.text.vEventGroupDelete) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups_1.o(.text.vEventGroupDelete) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    event_groups_1.o(.text.vEventGroupDelete) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups_1.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups_1.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups_1.o(.text.vEventGroupSetBitsCallback) refers to event_groups_1.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups_1.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups_1.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups_1.o(.text.xEventGroupSetBitsFromISR) refers to event_groups_1.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups_1.o(.text.xEventGroupSetBitsFromISR) refers to timers_1.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups_1.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups_1.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups_1.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups_1.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups_1.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups_1.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list_1.o(.ARM.exidx.text.vListInitialise) refers to list_1.o(.text.vListInitialise) for [Anonymous Symbol]
    list_1.o(.ARM.exidx.text.vListInitialiseItem) refers to list_1.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list_1.o(.ARM.exidx.text.vListInsertEnd) refers to list_1.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list_1.o(.ARM.exidx.text.vListInsert) refers to list_1.o(.text.vListInsert) for [Anonymous Symbol]
    list_1.o(.ARM.exidx.text.uxListRemove) refers to list_1.o(.text.uxListRemove) for [Anonymous Symbol]
    port_1.o(.text.pxPortInitialiseStack) refers to port_1.o(.text.prvTaskExitError) for prvTaskExitError
    port_1.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port_1.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port_1.o(.ARM.exidx.text.prvTaskExitError) refers to port_1.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port_1.o(.text.SVC_Handler) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port_1.o(.ARM.exidx.text.SVC_Handler) refers to port_1.o(.text.SVC_Handler) for [Anonymous Symbol]
    port_1.o(.text.xPortStartScheduler) refers to port_1.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port_1.o(.text.xPortStartScheduler) refers to port_1.o(.data.uxCriticalNesting) for uxCriticalNesting
    port_1.o(.text.xPortStartScheduler) refers to port_1.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port_1.o(.text.xPortStartScheduler) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port_1.o(.text.xPortStartScheduler) refers to port_1.o(.text.prvTaskExitError) for prvTaskExitError
    port_1.o(.ARM.exidx.text.xPortStartScheduler) refers to port_1.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port_1.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    port_1.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port_1.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port_1.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port_1.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port_1.o(.ARM.exidx.text.vPortEndScheduler) refers to port_1.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port_1.o(.text.vPortEnterCritical) refers to port_1.o(.data.uxCriticalNesting) for uxCriticalNesting
    port_1.o(.ARM.exidx.text.vPortEnterCritical) refers to port_1.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port_1.o(.text.vPortExitCritical) refers to port_1.o(.data.uxCriticalNesting) for uxCriticalNesting
    port_1.o(.ARM.exidx.text.vPortExitCritical) refers to port_1.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port_1.o(.text.PendSV_Handler) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port_1.o(.text.PendSV_Handler) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port_1.o(.ARM.exidx.text.PendSV_Handler) refers to port_1.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port_1.o(.text.xPortSysTickHandler) refers to tasks_1.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port_1.o(.ARM.exidx.text.xPortSysTickHandler) refers to port_1.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4_1.o(.text.pvPortMalloc) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4_1.o(.text.pvPortMalloc) refers to heap_4_1.o(.bss.pxEnd) for pxEnd
    heap_4_1.o(.text.pvPortMalloc) refers to heap_4_1.o(.text.prvHeapInit) for prvHeapInit
    heap_4_1.o(.text.pvPortMalloc) refers to heap_4_1.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4_1.o(.text.pvPortMalloc) refers to heap_4_1.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4_1.o(.text.pvPortMalloc) refers to heap_4_1.o(.bss.xStart) for xStart
    heap_4_1.o(.text.pvPortMalloc) refers to heap_4_1.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4_1.o(.text.pvPortMalloc) refers to heap_4_1.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4_1.o(.text.pvPortMalloc) refers to heap_4_1.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4_1.o(.text.pvPortMalloc) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4_1.o(.text.prvHeapInit) refers to heap_4_1.o(.bss.ucHeap) for ucHeap
    heap_4_1.o(.text.prvHeapInit) refers to heap_4_1.o(.bss.xStart) for xStart
    heap_4_1.o(.text.prvHeapInit) refers to heap_4_1.o(.bss.pxEnd) for pxEnd
    heap_4_1.o(.text.prvHeapInit) refers to heap_4_1.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4_1.o(.text.prvHeapInit) refers to heap_4_1.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4_1.o(.text.prvHeapInit) refers to heap_4_1.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4_1.o(.ARM.exidx.text.prvHeapInit) refers to heap_4_1.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4_1.o(.text.prvInsertBlockIntoFreeList) refers to heap_4_1.o(.bss.xStart) for xStart
    heap_4_1.o(.text.prvInsertBlockIntoFreeList) refers to heap_4_1.o(.bss.pxEnd) for pxEnd
    heap_4_1.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4_1.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4_1.o(.text.vPortFree) refers to heap_4_1.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4_1.o(.text.vPortFree) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4_1.o(.text.vPortFree) refers to heap_4_1.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4_1.o(.text.vPortFree) refers to heap_4_1.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4_1.o(.text.vPortFree) refers to heap_4_1.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4_1.o(.text.vPortFree) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4_1.o(.ARM.exidx.text.vPortFree) refers to heap_4_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4_1.o(.text.xPortGetFreeHeapSize) refers to heap_4_1.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4_1.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4_1.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4_1.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4_1.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4_1.o(.text.vPortGetHeapStats) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4_1.o(.text.vPortGetHeapStats) refers to heap_4_1.o(.bss.xStart) for xStart
    heap_4_1.o(.text.vPortGetHeapStats) refers to heap_4_1.o(.bss.pxEnd) for pxEnd
    heap_4_1.o(.text.vPortGetHeapStats) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4_1.o(.text.vPortGetHeapStats) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4_1.o(.text.vPortGetHeapStats) refers to heap_4_1.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4_1.o(.text.vPortGetHeapStats) refers to heap_4_1.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4_1.o(.text.vPortGetHeapStats) refers to heap_4_1.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4_1.o(.text.vPortGetHeapStats) refers to heap_4_1.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4_1.o(.text.vPortGetHeapStats) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4_1.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4_1.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue_1.o(.text.xQueueGenericReset) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.xQueueGenericReset) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.text.xQueueGenericReset) refers to list_1.o(.text.vListInitialise) for vListInitialise
    queue_1.o(.text.xQueueGenericReset) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.ARM.exidx.text.xQueueGenericReset) refers to queue_1.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue_1.o(.text.xQueueGenericCreateStatic) refers to queue_1.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue_1.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue_1.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue_1.o(.text.prvInitialiseNewQueue) refers to queue_1.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue_1.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue_1.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue_1.o(.text.xQueueGenericCreate) refers to heap_4_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue_1.o(.text.xQueueGenericCreate) refers to queue_1.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue_1.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue_1.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue_1.o(.text.xQueueCreateMutex) refers to queue_1.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue_1.o(.text.xQueueCreateMutex) refers to queue_1.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue_1.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue_1.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue_1.o(.text.prvInitialiseMutex) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue_1.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue_1.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue_1.o(.text.xQueueCreateMutexStatic) refers to queue_1.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue_1.o(.text.xQueueCreateMutexStatic) refers to queue_1.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue_1.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue_1.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue_1.o(.text.xQueueGetMutexHolder) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.xQueueGetMutexHolder) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue_1.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue_1.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue_1.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue_1.o(.text.xQueueGiveMutexRecursive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue_1.o(.text.xQueueGiveMutexRecursive) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue_1.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue_1.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue_1.o(.text.xQueueGenericSend) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.xQueueGenericSend) refers to queue_1.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue_1.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.text.xQueueGenericSend) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue_1.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue_1.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue_1.o(.text.xQueueGenericSend) refers to queue_1.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue_1.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue_1.o(.text.xQueueGenericSend) refers to queue_1.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue_1.o(.text.xQueueGenericSend) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue_1.o(.ARM.exidx.text.xQueueGenericSend) refers to queue_1.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue_1.o(.text.xQueueTakeMutexRecursive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue_1.o(.text.xQueueTakeMutexRecursive) refers to queue_1.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue_1.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue_1.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue_1.o(.text.xQueueSemaphoreTake) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.text.xQueueSemaphoreTake) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue_1.o(.text.xQueueSemaphoreTake) refers to queue_1.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue_1.o(.text.xQueueSemaphoreTake) refers to queue_1.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue_1.o(.text.xQueueSemaphoreTake) refers to queue_1.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue_1.o(.text.xQueueSemaphoreTake) refers to tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue_1.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue_1.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue_1.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue_1.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue_1.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue_1.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue_1.o(.text.xQueueCreateCountingSemaphore) refers to queue_1.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue_1.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue_1.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue_1.o(.text.prvCopyDataToQueue) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue_1.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue_1.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue_1.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue_1.o(.text.prvIsQueueFull) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.prvIsQueueFull) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.ARM.exidx.text.prvIsQueueFull) refers to queue_1.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue_1.o(.text.prvUnlockQueue) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.prvUnlockQueue) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.text.prvUnlockQueue) refers to tasks_1.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue_1.o(.text.prvUnlockQueue) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.ARM.exidx.text.prvUnlockQueue) refers to queue_1.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue_1.o(.text.xQueueGenericSendFromISR) refers to queue_1.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue_1.o(.text.xQueueGenericSendFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue_1.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue_1.o(.text.xQueueGiveFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue_1.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue_1.o(.text.xQueueReceive) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.xQueueReceive) refers to queue_1.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue_1.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.text.xQueueReceive) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue_1.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue_1.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue_1.o(.text.xQueueReceive) refers to queue_1.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue_1.o(.text.xQueueReceive) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue_1.o(.text.xQueueReceive) refers to queue_1.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue_1.o(.text.xQueueReceive) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue_1.o(.ARM.exidx.text.xQueueReceive) refers to queue_1.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue_1.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue_1.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue_1.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue_1.o(.text.prvIsQueueEmpty) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.prvIsQueueEmpty) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue_1.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue_1.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue_1.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue_1.o(.text.xQueuePeek) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.xQueuePeek) refers to queue_1.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue_1.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.text.xQueuePeek) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue_1.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue_1.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue_1.o(.text.xQueuePeek) refers to queue_1.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue_1.o(.text.xQueuePeek) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue_1.o(.text.xQueuePeek) refers to queue_1.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue_1.o(.text.xQueuePeek) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue_1.o(.ARM.exidx.text.xQueuePeek) refers to queue_1.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue_1.o(.text.xQueueReceiveFromISR) refers to queue_1.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue_1.o(.text.xQueueReceiveFromISR) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue_1.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue_1.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue_1.o(.text.xQueuePeekFromISR) refers to queue_1.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue_1.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue_1.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue_1.o(.text.uxQueueMessagesWaiting) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.uxQueueMessagesWaiting) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue_1.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue_1.o(.text.uxQueueSpacesAvailable) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.uxQueueSpacesAvailable) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue_1.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue_1.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue_1.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue_1.o(.text.vQueueDelete) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    queue_1.o(.ARM.exidx.text.vQueueDelete) refers to queue_1.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue_1.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue_1.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue_1.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue_1.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue_1.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue_1.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue_1.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue_1.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue_1.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue_1.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue_1.o(.text.vQueueWaitForMessageRestricted) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue_1.o(.text.vQueueWaitForMessageRestricted) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    queue_1.o(.text.vQueueWaitForMessageRestricted) refers to tasks_1.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue_1.o(.text.vQueueWaitForMessageRestricted) refers to queue_1.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue_1.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue_1.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferGenericCreate) refers to heap_4_1.o(.text.pvPortMalloc) for pvPortMalloc
    stream_buffer_1.o(.text.xStreamBufferGenericCreate) refers to stream_buffer_1.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferGenericCreate) refers to stream_buffer_1.o(.text.xStreamBufferGenericCreate) for [Anonymous Symbol]
    stream_buffer_1.o(.text.prvInitialiseNewStreamBuffer) refers to rt_memclr.o(.text) for __aeabi_memclr
    stream_buffer_1.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer) refers to stream_buffer_1.o(.text.prvInitialiseNewStreamBuffer) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferGenericCreateStatic) refers to stream_buffer_1.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferGenericCreateStatic) refers to stream_buffer_1.o(.text.xStreamBufferGenericCreateStatic) for [Anonymous Symbol]
    stream_buffer_1.o(.text.vStreamBufferDelete) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    stream_buffer_1.o(.text.vStreamBufferDelete) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    stream_buffer_1.o(.ARM.exidx.text.vStreamBufferDelete) refers to stream_buffer_1.o(.text.vStreamBufferDelete) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferReset) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer_1.o(.text.xStreamBufferReset) refers to stream_buffer_1.o(.text.prvInitialiseNewStreamBuffer) for prvInitialiseNewStreamBuffer
    stream_buffer_1.o(.text.xStreamBufferReset) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferReset) refers to stream_buffer_1.o(.text.xStreamBufferReset) for [Anonymous Symbol]
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel) refers to stream_buffer_1.o(.text.xStreamBufferSetTriggerLevel) for [Anonymous Symbol]
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSpacesAvailable) refers to stream_buffer_1.o(.text.xStreamBufferSpacesAvailable) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferBytesAvailable) refers to stream_buffer_1.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferBytesAvailable) refers to stream_buffer_1.o(.text.xStreamBufferBytesAvailable) for [Anonymous Symbol]
    stream_buffer_1.o(.ARM.exidx.text.prvBytesInBuffer) refers to stream_buffer_1.o(.text.prvBytesInBuffer) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferSend) refers to tasks_1.o(.text.vTaskSetTimeOutState) for vTaskSetTimeOutState
    stream_buffer_1.o(.text.xStreamBufferSend) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer_1.o(.text.xStreamBufferSend) refers to stream_buffer_1.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer_1.o(.text.xStreamBufferSend) refers to tasks_1.o(.text.xTaskNotifyStateClear) for xTaskNotifyStateClear
    stream_buffer_1.o(.text.xStreamBufferSend) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer_1.o(.text.xStreamBufferSend) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer_1.o(.text.xStreamBufferSend) refers to tasks_1.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    stream_buffer_1.o(.text.xStreamBufferSend) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    stream_buffer_1.o(.text.xStreamBufferSend) refers to stream_buffer_1.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer_1.o(.text.xStreamBufferSend) refers to stream_buffer_1.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer_1.o(.text.xStreamBufferSend) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer_1.o(.text.xStreamBufferSend) refers to tasks_1.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer_1.o(.text.xStreamBufferSend) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSend) refers to stream_buffer_1.o(.text.xStreamBufferSend) for [Anonymous Symbol]
    stream_buffer_1.o(.text.prvWriteMessageToBuffer) refers to stream_buffer_1.o(.text.prvWriteBytesToBuffer) for prvWriteBytesToBuffer
    stream_buffer_1.o(.ARM.exidx.text.prvWriteMessageToBuffer) refers to stream_buffer_1.o(.text.prvWriteMessageToBuffer) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferSendFromISR) refers to stream_buffer_1.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer_1.o(.text.xStreamBufferSendFromISR) refers to stream_buffer_1.o(.text.prvWriteMessageToBuffer) for prvWriteMessageToBuffer
    stream_buffer_1.o(.text.xStreamBufferSendFromISR) refers to stream_buffer_1.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer_1.o(.text.xStreamBufferSendFromISR) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSendFromISR) refers to stream_buffer_1.o(.text.xStreamBufferSendFromISR) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to stream_buffer_1.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to tasks_1.o(.text.xTaskNotifyStateClear) for xTaskNotifyStateClear
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to tasks_1.o(.text.xTaskNotifyWait) for xTaskNotifyWait
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to stream_buffer_1.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to tasks_1.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    stream_buffer_1.o(.text.xStreamBufferReceive) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferReceive) refers to stream_buffer_1.o(.text.xStreamBufferReceive) for [Anonymous Symbol]
    stream_buffer_1.o(.text.prvReadMessageFromBuffer) refers to stream_buffer_1.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer_1.o(.ARM.exidx.text.prvReadMessageFromBuffer) refers to stream_buffer_1.o(.text.prvReadMessageFromBuffer) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer_1.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer_1.o(.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer_1.o(.text.prvReadBytesFromBuffer) for prvReadBytesFromBuffer
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes) refers to stream_buffer_1.o(.text.xStreamBufferNextMessageLengthBytes) for [Anonymous Symbol]
    stream_buffer_1.o(.text.prvReadBytesFromBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer_1.o(.ARM.exidx.text.prvReadBytesFromBuffer) refers to stream_buffer_1.o(.text.prvReadBytesFromBuffer) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer_1.o(.text.prvBytesInBuffer) for prvBytesInBuffer
    stream_buffer_1.o(.text.xStreamBufferReceiveFromISR) refers to stream_buffer_1.o(.text.prvReadMessageFromBuffer) for prvReadMessageFromBuffer
    stream_buffer_1.o(.text.xStreamBufferReceiveFromISR) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferReceiveFromISR) refers to stream_buffer_1.o(.text.xStreamBufferReceiveFromISR) for [Anonymous Symbol]
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferIsEmpty) refers to stream_buffer_1.o(.text.xStreamBufferIsEmpty) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferIsFull) refers to stream_buffer_1.o(.text.xStreamBufferSpacesAvailable) for xStreamBufferSpacesAvailable
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferIsFull) refers to stream_buffer_1.o(.text.xStreamBufferIsFull) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferSendCompletedFromISR) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR) refers to stream_buffer_1.o(.text.xStreamBufferSendCompletedFromISR) for [Anonymous Symbol]
    stream_buffer_1.o(.text.xStreamBufferReceiveCompletedFromISR) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    stream_buffer_1.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR) refers to stream_buffer_1.o(.text.xStreamBufferReceiveCompletedFromISR) for [Anonymous Symbol]
    stream_buffer_1.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber) refers to stream_buffer_1.o(.text.uxStreamBufferGetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer_1.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber) refers to stream_buffer_1.o(.text.vStreamBufferSetStreamBufferNumber) for [Anonymous Symbol]
    stream_buffer_1.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType) refers to stream_buffer_1.o(.text.ucStreamBufferGetStreamBufferType) for [Anonymous Symbol]
    stream_buffer_1.o(.text.prvWriteBytesToBuffer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    stream_buffer_1.o(.ARM.exidx.text.prvWriteBytesToBuffer) refers to stream_buffer_1.o(.text.prvWriteBytesToBuffer) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCreateStatic) refers to tasks_1.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks_1.o(.text.xTaskCreateStatic) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks_1.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks_1.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks_1.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks_1.o(.text.prvInitialiseNewTask) refers to list_1.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks_1.o(.text.prvInitialiseNewTask) refers to port_1.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks_1.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks_1.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.prvAddNewTaskToReadyList) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCreate) refers to heap_4_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks_1.o(.text.xTaskCreate) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    tasks_1.o(.text.xTaskCreate) refers to tasks_1.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks_1.o(.text.xTaskCreate) refers to tasks_1.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks_1.o(.ARM.exidx.text.xTaskCreate) refers to tasks_1.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelete) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskDelete) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.vTaskDelete) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.vTaskDelete) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskDelete) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.ARM.exidx.text.vTaskDelete) refers to tasks_1.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks_1.o(.text.prvDeleteTCB) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    tasks_1.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks_1.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks_1.o(.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.vTaskDelayUntil) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks_1.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSuspendAll) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks_1.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to list_1.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskResumeAll) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskResumeAll) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskResumeAll) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskResumeAll) refers to tasks_1.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks_1.o(.text.xTaskResumeAll) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks_1.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.vTaskDelay) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.vTaskDelay) refers to tasks_1.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.eTaskGetState) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.eTaskGetState) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.eTaskGetState) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.ARM.exidx.text.eTaskGetState) refers to tasks_1.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskPriorityGet) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.uxTaskPriorityGet) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskPriorityGet) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks_1.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskPriorityGetFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks_1.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPrioritySet) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskPrioritySet) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskPrioritySet) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskPrioritySet) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskPrioritySet) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks_1.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSuspend) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskSuspend) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.vTaskSuspend) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskSuspend) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.vTaskSuspend) refers to tasks_1.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks_1.o(.ARM.exidx.text.vTaskSuspend) refers to tasks_1.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskSwitchContext) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks_1.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskResume) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks_1.o(.text.vTaskResume) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskResume) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskResume) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskResume) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskResume) refers to tasks_1.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks_1.o(.text.prvTaskIsTaskSuspended) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvTaskIsTaskSuspended) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskResumeFromISR) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskResumeFromISR) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskResumeFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks_1.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.text.prvIdleTask) for prvIdleTask
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.rodata.str1.1) for .L.str
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks_1.o(.text.vTaskStartScheduler) refers to timers_1.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskStartScheduler) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskStartScheduler) refers to port_1.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks_1.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks_1.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks_1.o(.text.prvIdleTask) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.ARM.exidx.text.prvIdleTask) refers to tasks_1.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskEndScheduler) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.vTaskEndScheduler) refers to port_1.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks_1.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks_1.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks_1.o(.text.xTaskIncrementTick) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskIncrementTick) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.text.xTaskIncrementTick) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks_1.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetTickCount) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks_1.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetTickCountFromISR) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks_1.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetNumberOfTasks) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks_1.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks_1.o(.text.pcTaskGetName) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.pcTaskGetName) refers to tasks_1.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.uxTaskGetSystemState) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks_1.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks_1.o(.text.prvListTasksWithinSingleList) refers to tasks_1.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks_1.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks_1.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.bss.xPendedTicks) for xPendedTicks
    tasks_1.o(.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks_1.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to list_1.o(.text.vListInsert) for vListInsert
    tasks_1.o(.text.vTaskPlaceOnEventList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks_1.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks_1.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskPlaceOnEventListRestricted) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks_1.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskRemoveFromEventList) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks_1.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks_1.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskSetTimeOutState) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.vTaskSetTimeOutState) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.vTaskSetTimeOutState) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.vTaskSetTimeOutState) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks_1.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.xTickCount) for xTickCount
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to tasks_1.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks_1.o(.text.xTaskCheckForTimeOut) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks_1.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskMissedYield) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks_1.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks_1.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks_1.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.eTaskGetState) for eTaskGetState
    tasks_1.o(.text.vTaskGetInfo) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks_1.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks_1.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks_1.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks_1.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetCurrentTaskHandle) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks_1.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGetSchedulerState) refers to tasks_1.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks_1.o(.text.xTaskGetSchedulerState) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks_1.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskPriorityInherit) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskPriorityInherit) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskPriorityInherit) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks_1.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskPriorityDisinherit) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks_1.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks_1.o(.text.uxTaskResetEventItemValue) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks_1.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks_1.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks_1.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks_1.o(.text.ulTaskNotifyTake) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.ulTaskNotifyTake) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.ulTaskNotifyTake) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.ulTaskNotifyTake) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks_1.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskNotifyWait) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskNotifyWait) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskNotifyWait) refers to tasks_1.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks_1.o(.text.xTaskNotifyWait) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks_1.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotify) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskGenericNotify) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGenericNotify) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskGenericNotify) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotify) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks_1.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks_1.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to list_1.o(.text.vListInsertEnd) for vListInsertEnd
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.bss.xYieldPending) for xYieldPending
    tasks_1.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks_1.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks_1.o(.text.xTaskNotifyStateClear) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.xTaskNotifyStateClear) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.xTaskNotifyStateClear) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks_1.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    tasks_1.o(.text.ulTaskNotifyValueClear) refers to tasks_1.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks_1.o(.text.ulTaskNotifyValueClear) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.ulTaskNotifyValueClear) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.ARM.exidx.text.ulTaskNotifyValueClear) refers to tasks_1.o(.text.ulTaskNotifyValueClear) for [Anonymous Symbol]
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks_1.o(.text.prvInitialiseTaskLists) refers to list_1.o(.text.vListInitialise) for vListInitialise
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks_1.o(.text.prvInitialiseTaskLists) refers to tasks_1.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks_1.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks_1.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to list_1.o(.text.uxListRemove) for uxListRemove
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    tasks_1.o(.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks_1.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks_1.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.text.prvTimerTask) for prvTimerTask
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.rodata.str1.1) for .L.str
    timers_1.o(.text.xTimerCreateTimerTask) refers to tasks_1.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers_1.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers_1.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to list_1.o(.text.vListInitialise) for vListInitialise
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to queue_1.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers_1.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers_1.o(.text.prvTimerTask) refers to timers_1.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers_1.o(.text.prvTimerTask) refers to timers_1.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers_1.o(.text.prvTimerTask) refers to timers_1.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers_1.o(.ARM.exidx.text.prvTimerTask) refers to timers_1.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers_1.o(.text.xTimerCreate) refers to heap_4_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers_1.o(.text.xTimerCreate) refers to timers_1.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers_1.o(.ARM.exidx.text.xTimerCreate) refers to timers_1.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers_1.o(.text.prvInitialiseNewTimer) refers to timers_1.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers_1.o(.text.prvInitialiseNewTimer) refers to list_1.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers_1.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers_1.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers_1.o(.text.xTimerCreateStatic) refers to timers_1.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers_1.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers_1.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers_1.o(.text.xTimerGenericCommand) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.xTimerGenericCommand) refers to tasks_1.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers_1.o(.text.xTimerGenericCommand) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers_1.o(.text.xTimerGenericCommand) refers to queue_1.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers_1.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers_1.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers_1.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers_1.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers_1.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers_1.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers_1.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers_1.o(.text.vTimerSetReloadMode) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.vTimerSetReloadMode) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers_1.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers_1.o(.text.uxTimerGetReloadMode) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.uxTimerGetReloadMode) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers_1.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers_1.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.pcTimerGetName) refers to timers_1.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers_1.o(.text.xTimerIsTimerActive) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.xTimerIsTimerActive) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers_1.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers_1.o(.text.pvTimerGetTimerID) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.pvTimerGetTimerID) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers_1.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers_1.o(.text.vTimerSetTimerID) refers to port_1.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.vTimerSetTimerID) refers to port_1.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers_1.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers_1.o(.text.xTimerPendFunctionCallFromISR) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.xTimerPendFunctionCallFromISR) refers to queue_1.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers_1.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers_1.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers_1.o(.text.xTimerPendFunctionCall) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.xTimerPendFunctionCall) refers to queue_1.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers_1.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers_1.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers_1.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers_1.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers_1.o(.text.prvGetNextExpireTime) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers_1.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to tasks_1.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to tasks_1.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to queue_1.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers_1.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers_1.o(.text.prvProcessReceivedCommands) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.prvProcessReceivedCommands) refers to queue_1.o(.text.xQueueReceive) for xQueueReceive
    timers_1.o(.text.prvProcessReceivedCommands) refers to list_1.o(.text.uxListRemove) for uxListRemove
    timers_1.o(.text.prvProcessReceivedCommands) refers to timers_1.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers_1.o(.text.prvProcessReceivedCommands) refers to timers_1.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers_1.o(.text.prvProcessReceivedCommands) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers_1.o(.text.prvProcessReceivedCommands) refers to heap_4_1.o(.text.vPortFree) for vPortFree
    timers_1.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers_1.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers_1.o(.text.prvSampleTimeNow) refers to tasks_1.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers_1.o(.text.prvSampleTimeNow) refers to timers_1.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers_1.o(.text.prvSampleTimeNow) refers to timers_1.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers_1.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers_1.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers_1.o(.text.prvProcessExpiredTimer) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.text.prvProcessExpiredTimer) refers to list_1.o(.text.uxListRemove) for uxListRemove
    timers_1.o(.text.prvProcessExpiredTimer) refers to timers_1.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers_1.o(.text.prvProcessExpiredTimer) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers_1.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers_1.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers_1.o(.text.prvSwitchTimerLists) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.text.prvSwitchTimerLists) refers to list_1.o(.text.uxListRemove) for uxListRemove
    timers_1.o(.text.prvSwitchTimerLists) refers to list_1.o(.text.vListInsert) for vListInsert
    timers_1.o(.text.prvSwitchTimerLists) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    timers_1.o(.text.prvSwitchTimerLists) refers to timers_1.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers_1.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers_1.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers_1.o(.text.prvInsertTimerInActiveList) refers to timers_1.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers_1.o(.text.prvInsertTimerInActiveList) refers to list_1.o(.text.vListInsert) for vListInsert
    timers_1.o(.text.prvInsertTimerInActiveList) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers_1.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task1), (8 bytes).
    Removing main.o(.ARM.exidx.text.Task2), (8 bytes).
    Removing main.o(.ARM.exidx.text.UART_SendString), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (186 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (110 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (122 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (126 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (150 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (78 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (118 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (388 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (124 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (220 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (204 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (168 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (322 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (128 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (332 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (150 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (170 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (136 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (262 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (300 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (198 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (166 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (108 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (314 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (206 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (102 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (258 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (236 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (232 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (102 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (142 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (480 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (296 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (346 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (142 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (196 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.1), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (126 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (60 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (32 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing misc.o(.text), (0 bytes).
    Removing misc.o(.text.NVIC_PriorityGroupConfig), (28 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_PriorityGroupConfig), (8 bytes).
    Removing misc.o(.text.NVIC_Init), (166 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing misc.o(.text.NVIC_SetVectorTable), (36 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SetVectorTable), (8 bytes).
    Removing misc.o(.text.NVIC_SystemLPConfig), (62 bytes).
    Removing misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing misc.o(.text.SysTick_CLKSourceConfig), (52 bytes).
    Removing misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text), (0 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_DeInit), (276 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_AFIODeInit), (26 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_AFIODeInit), (8 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_StructInit), (28 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadInputDataBit), (52 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadInputData), (14 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadOutputDataBit), (52 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ReadOutputData), (14 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_SetBits), (20 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ResetBits), (20 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_WriteBit), (44 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_Write), (20 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_PinLockConfig), (60 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EventOutputConfig), (64 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EventOutputCmd), (22 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EventOutputCmd), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_PinRemapConfig), (250 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_PinRemapConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_EXTILineConfig), (84 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_EXTILineConfig), (8 bytes).
    Removing stm32f10x_gpio.o(.text.GPIO_ETH_MediaInterfaceConfig), (18 bytes).
    Removing stm32f10x_gpio.o(.ARM.exidx.text.GPIO_ETH_MediaInterfaceConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text), (0 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_DeInit), (82 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HSEConfig), (92 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSEConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_WaitForHSEStartUp), (108 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_WaitForHSEStartUp), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetFlagStatus), (130 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_AdjustHSICalibrationValue), (50 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HSICmd), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PLLConfig), (50 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PLLCmd), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PLLCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_SYSCLKConfig), (44 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_HCLKConfig), (44 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PCLK1Config), (44 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK1Config), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_PCLK2Config), (46 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_PCLK2Config), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ITConfig), (62 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_USBCLKConfig), (18 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_USBCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ADCCLKConfig), (44 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_LSEConfig), (76 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSEConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_LSICmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_RTCCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_RTCCLKCmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_RTCCLKCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_AHBPeriphClockCmd), (56 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_APB1PeriphClockCmd), (56 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphClockCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_APB2PeriphResetCmd), (56 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB2PeriphResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_APB1PeriphResetCmd), (56 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_APB1PeriphResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_BackupResetCmd), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_BackupResetCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClockSecuritySystemCmd), (22 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_MCOConfig), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClearFlag), (18 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_GetITStatus), (56 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing stm32f10x_rcc.o(.text.RCC_ClearITPendingBit), (24 bytes).
    Removing stm32f10x_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing stm32f10x_usart.o(.text), (0 bytes).
    Removing stm32f10x_usart.o(.text.USART_DeInit), (208 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_StructInit), (40 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClockInit), (58 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClockStructInit), (26 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ITConfig), (146 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_DMACmd), (52 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_DMACmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetAddress), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_WakeUpConfig), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_WakeUpConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ReceiverWakeUpCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiverWakeUpCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_LINBreakDetectLengthConfig), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_LINCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_LINCmd), (8 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ReceiveData), (16 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SendBreak), (18 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SendBreak), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetGuardTime), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SetPrescaler), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SetPrescaler), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SmartCardCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_SmartCardNACKCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_HalfDuplexCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_OverSampling8Cmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_OneBitMethodCmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_IrDAConfig), (34 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_IrDACmd), (44 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_GetFlagStatus), (68 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClearFlag), (36 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_GetITStatus), (176 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing stm32f10x_usart.o(.text.USART_ClearITPendingBit), (68 bytes).
    Removing stm32f10x_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.text.SystemCoreClockUpdate), (290 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing system_stm32f10x.o(.rodata.AHBPrescTable), (16 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing croutine_1.o(.text), (0 bytes).
    Removing event_groups_1.o(.text), (0 bytes).
    Removing event_groups_1.o(.text.xEventGroupCreateStatic), (46 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups_1.o(.text.xEventGroupCreate), (50 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups_1.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups_1.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups_1.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups_1.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups_1.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups_1.o(.text.xEventGroupClearBitsFromISR), (34 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups_1.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups_1.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups_1.o(.text.vEventGroupDelete), (70 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups_1.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups_1.o(.text.xEventGroupSetBitsFromISR), (36 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups_1.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups_1.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups_1.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list_1.o(.text), (0 bytes).
    Removing list_1.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list_1.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list_1.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list_1.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list_1.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port_1.o(.text), (0 bytes).
    Removing port_1.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port_1.o(.text.vPortEndScheduler), (2 bytes).
    Removing port_1.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port_1.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4_1.o(.text), (0 bytes).
    Removing heap_4_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4_1.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4_1.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4_1.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4_1.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4_1.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4_1.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4_1.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4_1.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue_1.o(.text), (0 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue_1.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue_1.o(.text.xQueueGetMutexHolderFromISR), (32 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue_1.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue_1.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue_1.o(.text.xQueueCreateCountingSemaphoreStatic), (52 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue_1.o(.text.xQueueCreateCountingSemaphore), (42 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue_1.o(.text.xQueueGiveFromISR), (174 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue_1.o(.text.xQueuePeek), (342 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue_1.o(.text.xQueueReceiveFromISR), (178 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue_1.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue_1.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue_1.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue_1.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue_1.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue_1.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue_1.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue_1.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue_1.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue_1.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue_1.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue_1.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue_1.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue_1.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue_1.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue_1.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue_1.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing stream_buffer_1.o(.text), (0 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferGenericCreate), (102 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferGenericCreate), (8 bytes).
    Removing stream_buffer_1.o(.text.prvInitialiseNewStreamBuffer), (60 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.prvInitialiseNewStreamBuffer), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferGenericCreateStatic), (116 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferGenericCreateStatic), (8 bytes).
    Removing stream_buffer_1.o(.text.vStreamBufferDelete), (44 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.vStreamBufferDelete), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferReset), (86 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferReset), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferSetTriggerLevel), (58 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSetTriggerLevel), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferSpacesAvailable), (66 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSpacesAvailable), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferBytesAvailable), (24 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferBytesAvailable), (8 bytes).
    Removing stream_buffer_1.o(.text.prvBytesInBuffer), (56 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.prvBytesInBuffer), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferSend), (264 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSend), (8 bytes).
    Removing stream_buffer_1.o(.text.prvWriteMessageToBuffer), (138 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.prvWriteMessageToBuffer), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferSendFromISR), (184 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSendFromISR), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferReceive), (240 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferReceive), (8 bytes).
    Removing stream_buffer_1.o(.text.prvReadMessageFromBuffer), (104 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.prvReadMessageFromBuffer), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferNextMessageLengthBytes), (86 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferNextMessageLengthBytes), (8 bytes).
    Removing stream_buffer_1.o(.text.prvReadBytesFromBuffer), (186 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.prvReadBytesFromBuffer), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferReceiveFromISR), (180 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferReceiveFromISR), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferIsEmpty), (44 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferIsEmpty), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferIsFull), (64 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferIsFull), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferSendCompletedFromISR), (104 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferSendCompletedFromISR), (8 bytes).
    Removing stream_buffer_1.o(.text.xStreamBufferReceiveCompletedFromISR), (104 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.xStreamBufferReceiveCompletedFromISR), (8 bytes).
    Removing stream_buffer_1.o(.text.uxStreamBufferGetStreamBufferNumber), (12 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.uxStreamBufferGetStreamBufferNumber), (8 bytes).
    Removing stream_buffer_1.o(.text.vStreamBufferSetStreamBufferNumber), (16 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.vStreamBufferSetStreamBufferNumber), (8 bytes).
    Removing stream_buffer_1.o(.text.ucStreamBufferGetStreamBufferType), (16 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.ucStreamBufferGetStreamBufferType), (8 bytes).
    Removing stream_buffer_1.o(.text.prvWriteBytesToBuffer), (148 bytes).
    Removing stream_buffer_1.o(.ARM.exidx.text.prvWriteBytesToBuffer), (8 bytes).
    Removing tasks_1.o(.text), (0 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks_1.o(.text.vTaskDelete), (234 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks_1.o(.text.vTaskDelayUntil), (184 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks_1.o(.text.eTaskGetState), (218 bytes).
    Removing tasks_1.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks_1.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks_1.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskPrioritySet), (382 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks_1.o(.text.vTaskSuspend), (260 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks_1.o(.text.vTaskResume), (186 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks_1.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks_1.o(.text.xTaskResumeFromISR), (210 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks_1.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks_1.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks_1.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks_1.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks_1.o(.text.xTaskCatchUpTicks), (42 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskPlaceOnUnorderedEventList), (50 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskRemoveFromUnorderedEventList), (140 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks_1.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks_1.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks_1.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks_1.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks_1.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks_1.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks_1.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks_1.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks_1.o(.text.ulTaskNotifyTake), (186 bytes).
    Removing tasks_1.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks_1.o(.text.xTaskNotifyWait), (214 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotify), (286 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks_1.o(.text.xTaskGenericNotifyFromISR), (358 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks_1.o(.text.vTaskNotifyGiveFromISR), (250 bytes).
    Removing tasks_1.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks_1.o(.text.xTaskNotifyStateClear), (82 bytes).
    Removing tasks_1.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing tasks_1.o(.text.ulTaskNotifyValueClear), (76 bytes).
    Removing tasks_1.o(.ARM.exidx.text.ulTaskNotifyValueClear), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks_1.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers_1.o(.text), (0 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers_1.o(.text.xTimerCreate), (74 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers_1.o(.text.prvInitialiseNewTimer), (90 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers_1.o(.text.xTimerCreateStatic), (74 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers_1.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers_1.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers_1.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers_1.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers_1.o(.text.uxTimerGetReloadMode), (50 bytes).
    Removing timers_1.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers_1.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers_1.o(.text.pcTimerGetName), (16 bytes).
    Removing timers_1.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers_1.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers_1.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers_1.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers_1.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers_1.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers_1.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers_1.o(.text.xTimerPendFunctionCall), (58 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers_1.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers_1.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers_1.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers_1.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

687 unused section(s) (total 30078 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    RTE/Device/STM32F103C8/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    croutine.c                               0x00000000   Number         0  croutine_1.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups_1.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4_1.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list_1.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    misc.c                                   0x00000000   Number         0  misc.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port_1.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue_1.o ABSOLUTE
    stm32f10x_gpio.c                         0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    stm32f10x_rcc.c                          0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    stm32f10x_usart.c                        0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    stream_buffer.c                          0x00000000   Number         0  stream_buffer_1.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks_1.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers_1.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       92  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000150   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x0800016c   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x08000170   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800018c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800018e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800018e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000190   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000192   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000192   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000194   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000194   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000194   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800019a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x080001a2   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001a6   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001a6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001ae   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001b0   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001b0   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001b4   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x080001bc   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001fc   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000286   Section       16  aeabi_memset4.o(.text)
    .text                                    0x08000296   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080002e4   Section        0  heapauxi.o(.text)
    .text                                    0x080002ea   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0800034e   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000398   Section        0  exit.o(.text)
    .text                                    0x080003ac   Section        8  libspace.o(.text)
    .text                                    0x080003b4   Section        0  sys_exit.o(.text)
    .text                                    0x080003c0   Section        2  use_no_semi.o(.text)
    .text                                    0x080003c2   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080003c4   Section        0  stm32f10x_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x08000550   Section        0  port_1.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08000590   Number         0  port_1.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08000594   Section        0  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    [Anonymous Symbol]                       0x080005cc   Section        0  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    [Anonymous Symbol]                       0x08000740   Section        0  port_1.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08000760   Number         0  port_1.o(.text.SVC_Handler)
    SetSysClock                              0x08000765   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08000764   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x0800076d   Thumb Code   290  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x0800076c   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x08000890   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080008b0   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000918   Section        0  main.o(.text.Task1)
    [Anonymous Symbol]                       0x08000968   Section        0  main.o(.text.Task2)
    [Anonymous Symbol]                       0x080009b8   Section        0  main.o(.text.UART_Config)
    [Anonymous Symbol]                       0x08000a40   Section        0  main.o(.text.UART_SendString)
    [Anonymous Symbol]                       0x08000a80   Section        0  stm32f10x_usart.o(.text.USART_Cmd)
    [Anonymous Symbol]                       0x08000aac   Section        0  stm32f10x_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x08000c08   Section        0  stm32f10x_usart.o(.text.USART_SendData)
    __tagsym$$used.1                         0x08000c20   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08000c20   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08000c40   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08000c40   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x08000c94   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08000c94   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08000d30   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000d30   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000d54   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x08000d58   Section        0  main.o(.text.main)
    os_kernel_is_active                      0x08000dc5   Thumb Code    62  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08000dc4   Section        0  clib_arm.o(.text.os_kernel_is_active)
    prvAddCurrentTaskToDelayedList           0x08000e05   Thumb Code   212  tasks_1.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08000e04   Section        0  tasks_1.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08000ed9   Thumb Code   290  tasks_1.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08000ed8   Section        0  tasks_1.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08000ffd   Thumb Code   126  timers_1.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08000ffc   Section        0  timers_1.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x0800107d   Thumb Code    90  tasks_1.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x0800107c   Section        0  tasks_1.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x080010d9   Thumb Code    66  queue_1.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x080010d8   Section        0  queue_1.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x0800111d   Thumb Code   204  queue_1.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x0800111c   Section        0  queue_1.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x080011e9   Thumb Code    60  tasks_1.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x080011e8   Section        0  tasks_1.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x08001225   Thumb Code    38  queue_1.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x08001224   Section        0  queue_1.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x0800124d   Thumb Code    64  timers_1.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x0800124c   Section        0  timers_1.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x0800128d   Thumb Code   188  heap_4_1.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x0800128c   Section        0  heap_4_1.o(.text.prvHeapInit)
    prvIdleTask                              0x08001349   Thumb Code    56  tasks_1.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08001348   Section        0  tasks_1.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x08001381   Thumb Code    44  queue_1.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x08001380   Section        0  queue_1.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x080013ad   Thumb Code    72  queue_1.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x080013ac   Section        0  queue_1.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x080013f5   Thumb Code   258  tasks_1.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x080013f4   Section        0  tasks_1.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x080014f9   Thumb Code   142  tasks_1.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x080014f8   Section        0  tasks_1.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x08001589   Thumb Code   198  heap_4_1.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08001588   Section        0  heap_4_1.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x08001651   Thumb Code   134  timers_1.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x08001650   Section        0  timers_1.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x080016d9   Thumb Code    40  queue_1.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x080016d8   Section        0  queue_1.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x08001701   Thumb Code    46  queue_1.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x08001700   Section        0  queue_1.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x08001731   Thumb Code    26  port_1.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08001730   Section        0  port_1.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x08001751   Thumb Code   114  timers_1.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x08001750   Section        0  timers_1.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x080017c5   Thumb Code   314  timers_1.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x080017c4   Section        0  timers_1.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x08001901   Thumb Code   154  timers_1.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x08001900   Section        0  timers_1.o(.text.prvProcessTimerOrBlockTask)
    prvResetNextTaskUnblockTime              0x0800199d   Thumb Code    70  tasks_1.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x0800199c   Section        0  tasks_1.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x080019e5   Thumb Code    68  timers_1.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x080019e4   Section        0  timers_1.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x08001a29   Thumb Code   184  timers_1.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x08001a28   Section        0  timers_1.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x08001ae1   Thumb Code    38  port_1.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08001ae0   Section        0  port_1.o(.text.prvTaskExitError)
    prvTimerTask                             0x08001b09   Thumb Code    30  timers_1.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08001b08   Section        0  timers_1.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08001b29   Thumb Code   174  queue_1.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08001b28   Section        0  queue_1.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08001bd8   Section        0  heap_4_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08001d64   Section        0  tasks_1.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x08001d90   Section        0  port_1.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08001de0   Section        0  list_1.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08001e28   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x08001e54   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x08001e80   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08001e8c   Section        0  list_1.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08001ebc   Section        0  list_1.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08001ecc   Section        0  list_1.o(.text.vListInsert)
    [Anonymous Symbol]                       0x08001f38   Section        0  list_1.o(.text.vListInsertEnd)
    [Anonymous Symbol]                       0x08001f74   Section        0  port_1.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08001fa4   Section        0  port_1.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08001fcc   Section        0  heap_4_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08002050   Section        0  port_1.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08002094   Section        0  queue_1.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x080020b8   Section        0  queue_1.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x0800211c   Section        0  tasks_1.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08002168   Section        0  tasks_1.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x0800218c   Section        0  tasks_1.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x0800219c   Section        0  tasks_1.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x080021c4   Section        0  tasks_1.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x080021fc   Section        0  tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x080022e8   Section        0  tasks_1.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x080023ac   Section        0  tasks_1.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x080023bc   Section        0  tasks_1.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080024c0   Section        0  port_1.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08002500   Section        0  port_1.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x0800253c   Section        0  queue_1.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x08002564   Section        0  queue_1.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x08002598   Section        0  queue_1.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x080025f0   Section        0  queue_1.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x0800263c   Section        0  queue_1.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x080026dc   Section        0  queue_1.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x08002848   Section        0  queue_1.o(.text.xQueueGenericSendFromISR)
    [Anonymous Symbol]                       0x08002908   Section        0  queue_1.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08002a5c   Section        0  queue_1.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x08002bfc   Section        0  tasks_1.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08002c90   Section        0  tasks_1.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08002d30   Section        0  tasks_1.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x08002da4   Section        0  tasks_1.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x08002ddc   Section        0  tasks_1.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x08002df0   Section        0  tasks_1.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08002f90   Section        0  tasks_1.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x08003038   Section        0  tasks_1.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x08003148   Section        0  tasks_1.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x080031fc   Section        0  tasks_1.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08003360   Section        0  timers_1.o(.text.xTimerCreateTimerTask)
    [Anonymous Symbol]                       0x080033d8   Section        0  timers_1.o(.text.xTimerGenericCommand)
    ADCPrescTable                            0x0800346c   Data           4  stm32f10x_rcc.o(.rodata.ADCPrescTable)
    [Anonymous Symbol]                       0x0800346c   Section        0  stm32f10x_rcc.o(.rodata.ADCPrescTable)
    APBAHBPrescTable                         0x08003470   Data          16  stm32f10x_rcc.o(.rodata.APBAHBPrescTable)
    [Anonymous Symbol]                       0x08003470   Section        0  stm32f10x_rcc.o(.rodata.APBAHBPrescTable)
    .L.str.2                                 0x08003480   Data           4  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003480   Section        0  main.o(.rodata.str1.1)
    .L.str.3                                 0x08003484   Data           4  main.o(.rodata.str1.1)
    .L.str                                   0x08003488   Data           3  main.o(.rodata.str1.1)
    .L.str.1                                 0x0800348b   Data           3  main.o(.rodata.str1.1)
    .L.str                                   0x0800348e   Data           5  tasks_1.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800348e   Section        0  tasks_1.o(.rodata.str1.1)
    .L.str                                   0x08003493   Data           8  timers_1.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003493   Section        0  timers_1.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port_1.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port_1.o(.data.uxCriticalNesting)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    clib_mutex_cb                            0x20000068   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x20000068   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x200001f8   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x200001f8   Section        0  clib_arm.o(.bss.clib_mutex_id)
    os_kernel_is_active.os_kernel_active     0x2000020c   Data           1  clib_arm.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x2000020c   Section        0  clib_arm.o(.bss.os_kernel_is_active.os_kernel_active)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x2000020d   Data          80  timers_1.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x2000020d   Section        0  timers_1.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x20000260   Data          80  timers_1.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x20000260   Section        0  timers_1.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x200002b0   Data           4  timers_1.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200002b0   Section        0  timers_1.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x200002b8   Data           4  timers_1.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200002b8   Section        0  timers_1.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200002bc   Data           4  tasks_1.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200002bc   Section        0  tasks_1.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x200002c0   Data           4  heap_4_1.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x200002c0   Section        0  heap_4_1.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x200002c4   Data           4  tasks_1.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200002c4   Section        0  tasks_1.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200002c8   Data           4  timers_1.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200002c8   Section        0  timers_1.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200002cc   Data        1120  tasks_1.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200002cc   Section        0  tasks_1.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x2000072c   Data        8192  heap_4_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x2000072c   Section        0  heap_4_1.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x2000272c   Data           4  tasks_1.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x2000272c   Section        0  tasks_1.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002730   Data           4  tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002730   Section        0  tasks_1.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002734   Data           4  tasks_1.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002734   Section        0  tasks_1.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002738   Data           4  tasks_1.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002738   Section        0  tasks_1.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x2000273c   Data           4  tasks_1.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x2000273c   Section        0  tasks_1.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x20002740   Data         512  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x20002740   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x20002940   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x20002940   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x2000299c   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x2000299c   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002adc   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002adc   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20002b38   Data          20  timers_1.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002b38   Section        0  timers_1.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002b4c   Data          20  timers_1.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002b4c   Section        0  timers_1.o(.bss.xActiveTimerList2)
    xBlockAllocatedBit                       0x20002b60   Data           4  heap_4_1.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x20002b60   Section        0  heap_4_1.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x20002b64   Data          20  tasks_1.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002b64   Section        0  tasks_1.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002b78   Data          20  tasks_1.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002b78   Section        0  tasks_1.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002b8c   Data           4  heap_4_1.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002b8c   Section        0  heap_4_1.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002b90   Data           4  tasks_1.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002b90   Section        0  tasks_1.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002b94   Data           4  heap_4_1.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002b94   Section        0  heap_4_1.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002b9c   Data           4  tasks_1.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002b9c   Section        0  tasks_1.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002ba0   Data           4  tasks_1.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002ba0   Section        0  tasks_1.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002ba4   Data           4  heap_4_1.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002ba4   Section        0  heap_4_1.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002ba8   Data           4  heap_4_1.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002ba8   Section        0  heap_4_1.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002bac   Data           4  tasks_1.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002bac   Section        0  tasks_1.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002bb0   Data          20  tasks_1.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002bb0   Section        0  tasks_1.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002bc4   Data           4  tasks_1.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002bc4   Section        0  tasks_1.o(.bss.xSchedulerRunning)
    xStart                                   0x20002bc8   Data           8  heap_4_1.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002bc8   Section        0  heap_4_1.o(.bss.xStart)
    xSuspendedTaskList                       0x20002bd0   Data          20  tasks_1.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002bd0   Section        0  tasks_1.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002be4   Data          20  tasks_1.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002be4   Section        0  tasks_1.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002bf8   Data           4  tasks_1.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002bf8   Section        0  tasks_1.o(.bss.xTickCount)
    xTimerQueue                              0x20002bfc   Data           4  timers_1.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002bfc   Section        0  timers_1.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002c00   Data           4  timers_1.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002c00   Section        0  timers_1.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002c04   Data           4  tasks_1.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002c04   Section        0  tasks_1.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002c08   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20002c08   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20002e08   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20002e08   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20003208   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x080000ff   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000151   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x0800016d   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x08000171   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800018d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_1                       0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800018f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000191   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000193   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000195   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000195   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000195   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800019b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x080001a3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x080001a7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001a7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001af   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001b1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001b1   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001b5   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x080001bd   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x080001c5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x080001c7   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x080001c9   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x080001cb   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080001cd   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001d1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART1_IRQHandler                        0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001d7   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001d9   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __aeabi_memcpy                           0x080001fd   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080001fd   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000263   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x08000287   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000287   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr4                          0x08000297   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000297   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000297   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0800029b   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x080002e5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080002e7   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080002e9   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x080002eb   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080002eb   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080002eb   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000333   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x0800034f   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000399   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x080003ad   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080003ad   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080003b5   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080003c1   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080003c1   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080003c3   Thumb Code     0  indicate_semi.o(.text)
    GPIO_Init                                0x080003c5   Thumb Code   390  stm32f10x_gpio.o(.text.GPIO_Init)
    PendSV_Handler                           0x08000551   Thumb Code    68  port_1.o(.text.PendSV_Handler)
    RCC_APB2PeriphClockCmd                   0x08000595   Thumb Code    56  stm32f10x_rcc.o(.text.RCC_APB2PeriphClockCmd)
    RCC_GetClocksFreq                        0x080005cd   Thumb Code   370  stm32f10x_rcc.o(.text.RCC_GetClocksFreq)
    SVC_Handler                              0x08000741   Thumb Code    36  port_1.o(.text.SVC_Handler)
    SysTick_Handler                          0x08000891   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x080008b1   Thumb Code   102  system_stm32f10x.o(.text.SystemInit)
    Task1                                    0x08000919   Thumb Code    80  main.o(.text.Task1)
    Task2                                    0x08000969   Thumb Code    80  main.o(.text.Task2)
    UART_Config                              0x080009b9   Thumb Code   134  main.o(.text.UART_Config)
    UART_SendString                          0x08000a41   Thumb Code    64  main.o(.text.UART_SendString)
    USART_Cmd                                0x08000a81   Thumb Code    44  stm32f10x_usart.o(.text.USART_Cmd)
    USART_Init                               0x08000aad   Thumb Code   348  stm32f10x_usart.o(.text.USART_Init)
    USART_SendData                           0x08000c09   Thumb Code    24  stm32f10x_usart.o(.text.USART_SendData)
    _mutex_acquire                           0x08000c21   Thumb Code    32  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x08000c41   Thumb Code    84  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x08000c95   Thumb Code   156  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x08000d31   Thumb Code    34  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08000d55   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    main                                     0x08000d59   Thumb Code   108  main.o(.text.main)
    pvPortMalloc                             0x08001bd9   Thumb Code   396  heap_4_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08001d65   Thumb Code    44  tasks_1.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x08001d91   Thumb Code    80  port_1.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x08001de1   Thumb Code    72  list_1.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x08001e29   Thumb Code    42  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x08001e55   Thumb Code    42  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x08001e81   Thumb Code    10  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x08001e8d   Thumb Code    46  list_1.o(.text.vListInitialise)
    vListInitialiseItem                      0x08001ebd   Thumb Code    14  list_1.o(.text.vListInitialiseItem)
    vListInsert                              0x08001ecd   Thumb Code   106  list_1.o(.text.vListInsert)
    vListInsertEnd                           0x08001f39   Thumb Code    58  list_1.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x08001f75   Thumb Code    48  port_1.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08001fa5   Thumb Code    38  port_1.o(.text.vPortExitCritical)
    vPortFree                                0x08001fcd   Thumb Code   132  heap_4_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08002051   Thumb Code    68  port_1.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x08002095   Thumb Code    34  queue_1.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x080020b9   Thumb Code   100  queue_1.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x0800211d   Thumb Code    74  tasks_1.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08002169   Thumb Code    36  tasks_1.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x0800218d   Thumb Code    14  tasks_1.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x0800219d   Thumb Code    38  tasks_1.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x080021c5   Thumb Code    54  tasks_1.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x080021fd   Thumb Code   236  tasks_1.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x080022e9   Thumb Code   194  tasks_1.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x080023ad   Thumb Code    16  tasks_1.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x080023bd   Thumb Code   260  tasks_1.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x080024c1   Thumb Code    64  port_1.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x08002501   Thumb Code    60  port_1.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x0800253d   Thumb Code    38  queue_1.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x08002565   Thumb Code    50  queue_1.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x08002599   Thumb Code    88  queue_1.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x080025f1   Thumb Code    74  queue_1.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x0800263d   Thumb Code   158  queue_1.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x080026dd   Thumb Code   362  queue_1.o(.text.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x08002849   Thumb Code   190  queue_1.o(.text.xQueueGenericSendFromISR)
    xQueueReceive                            0x08002909   Thumb Code   338  queue_1.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x08002a5d   Thumb Code   414  queue_1.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x08002bfd   Thumb Code   148  tasks_1.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08002c91   Thumb Code   158  tasks_1.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x08002d31   Thumb Code   114  tasks_1.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x08002da5   Thumb Code    56  tasks_1.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x08002ddd   Thumb Code    20  tasks_1.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x08002df1   Thumb Code   414  tasks_1.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08002f91   Thumb Code   166  tasks_1.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x08003039   Thumb Code   270  tasks_1.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08003149   Thumb Code   178  tasks_1.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x080031fd   Thumb Code   354  tasks_1.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08003361   Thumb Code   120  timers_1.o(.text.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x080033d9   Thumb Code   148  timers_1.o(.text.xTimerGenericCommand)
    Region$$Table$$Base                      0x0800349c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080034bc   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    pxCurrentTCB                             0x200002b4   Data           4  tasks_1.o(.bss.pxCurrentTCB)
    xMutex                                   0x20002b98   Data           4  main.o(.bss.xMutex)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000ed

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x000034c8, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000034bc, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          450    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          965  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x0000005c   Code   RO         1130    !!!scatter          c_w.l(__scatter.o)
    0x08000150   0x08000150   0x0000001a   Code   RO         1134    !!handler_copy      c_w.l(__scatter_copy.o)
    0x0800016a   0x0800016a   0x00000002   PAD
    0x0800016c   0x0800016c   0x00000002   Code   RO         1131    !!handler_null      c_w.l(__scatter.o)
    0x0800016e   0x0800016e   0x00000002   PAD
    0x08000170   0x08000170   0x0000001c   Code   RO         1136    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800018c   0x0800018c   0x00000002   Code   RO          992    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          999    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1001    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1003    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1006    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1008    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1010    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1013    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1015    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1017    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1019    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1021    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1023    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1025    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1027    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1029    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1031    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1033    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1037    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1039    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1041    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO         1043    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800018e   0x0800018e   0x00000002   Code   RO         1044    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000190   0x08000190   0x00000002   Code   RO         1066    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000192   0x08000192   0x00000000   Code   RO         1081    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO         1083    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO         1086    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO         1089    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO         1091    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000000   Code   RO         1094    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000192   0x08000192   0x00000002   Code   RO         1095    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000194   0x08000194   0x00000000   Code   RO          967    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000194   0x08000194   0x00000000   Code   RO          971    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000194   0x08000194   0x00000006   Code   RO          983    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800019a   0x0800019a   0x00000008   Code   RO          972    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x080001a2   0x080001a2   0x00000004   Code   RO          974    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO          976    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001a6   0x080001a6   0x00000008   Code   RO          977    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001ae   0x080001ae   0x00000002   Code   RO          996    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001b0   0x080001b0   0x00000000   Code   RO         1046    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001b0   0x080001b0   0x00000004   Code   RO         1047    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001b4   0x080001b4   0x00000006   Code   RO         1048    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001ba   0x080001ba   0x00000002   PAD
    0x080001bc   0x080001bc   0x00000040   Code   RO          451    .text               startup_stm32f10x_md.o
    0x080001fc   0x080001fc   0x0000008a   Code   RO          955    .text               c_w.l(rt_memcpy_v6.o)
    0x08000286   0x08000286   0x00000010   Code   RO          957    .text               c_w.l(aeabi_memset4.o)
    0x08000296   0x08000296   0x0000004e   Code   RO          961    .text               c_w.l(rt_memclr_w.o)
    0x080002e4   0x080002e4   0x00000006   Code   RO          963    .text               c_w.l(heapauxi.o)
    0x080002ea   0x080002ea   0x00000064   Code   RO          968    .text               c_w.l(rt_memcpy_w.o)
    0x0800034e   0x0800034e   0x0000004a   Code   RO          985    .text               c_w.l(sys_stackheap_outer.o)
    0x08000398   0x08000398   0x00000012   Code   RO          987    .text               c_w.l(exit.o)
    0x080003aa   0x080003aa   0x00000002   PAD
    0x080003ac   0x080003ac   0x00000008   Code   RO          993    .text               c_w.l(libspace.o)
    0x080003b4   0x080003b4   0x0000000c   Code   RO         1056    .text               c_w.l(sys_exit.o)
    0x080003c0   0x080003c0   0x00000002   Code   RO         1071    .text               c_w.l(use_no_semi.o)
    0x080003c2   0x080003c2   0x00000000   Code   RO         1073    .text               c_w.l(indicate_semi.o)
    0x080003c2   0x080003c2   0x00000002   PAD
    0x080003c4   0x080003c4   0x00000186   Code   RO          272    .text.GPIO_Init     stm32f10x_gpio.o
    0x0800054a   0x0800054a   0x00000006   PAD
    0x08000550   0x08000550   0x00000044   Code   RO          549    .text.PendSV_Handler  port_1.o
    0x08000594   0x08000594   0x00000038   Code   RO          355    .text.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x080005cc   0x080005cc   0x00000172   Code   RO          351    .text.RCC_GetClocksFreq  stm32f10x_rcc.o
    0x0800073e   0x0800073e   0x00000002   PAD
    0x08000740   0x08000740   0x00000024   Code   RO          535    .text.SVC_Handler   port_1.o
    0x08000764   0x08000764   0x00000008   Code   RO          460    .text.SetSysClock   system_stm32f10x.o
    0x0800076c   0x0800076c   0x00000122   Code   RO          464    .text.SetSysClockTo72  system_stm32f10x.o
    0x0800088e   0x0800088e   0x00000002   PAD
    0x08000890   0x08000890   0x0000001e   Code   RO           48    .text.SysTick_Handler  cmsis_os2.o
    0x080008ae   0x080008ae   0x00000002   PAD
    0x080008b0   0x080008b0   0x00000066   Code   RO          458    .text.SystemInit    system_stm32f10x.o
    0x08000916   0x08000916   0x00000002   PAD
    0x08000918   0x08000918   0x00000050   Code   RO            6    .text.Task1         main.o
    0x08000968   0x08000968   0x00000050   Code   RO            8    .text.Task2         main.o
    0x080009b8   0x080009b8   0x00000086   Code   RO            4    .text.UART_Config   main.o
    0x08000a3e   0x08000a3e   0x00000002   PAD
    0x08000a40   0x08000a40   0x00000040   Code   RO           10    .text.UART_SendString  main.o
    0x08000a80   0x08000a80   0x0000002c   Code   RO          394    .text.USART_Cmd     stm32f10x_usart.o
    0x08000aac   0x08000aac   0x0000015c   Code   RO          386    .text.USART_Init    stm32f10x_usart.o
    0x08000c08   0x08000c08   0x00000018   Code   RO          410    .text.USART_SendData  stm32f10x_usart.o
    0x08000c20   0x08000c20   0x00000020   Code   RO           30    .text._mutex_acquire  clib_arm.o
    0x08000c40   0x08000c40   0x00000054   Code   RO           34    .text._mutex_free   clib_arm.o
    0x08000c94   0x08000c94   0x0000009c   Code   RO           28    .text._mutex_initialize  clib_arm.o
    0x08000d30   0x08000d30   0x00000022   Code   RO           32    .text._mutex_release  clib_arm.o
    0x08000d52   0x08000d52   0x00000002   PAD
    0x08000d54   0x08000d54   0x00000002   Code   RO           22    .text._platform_post_stackheap_init  clib_arm.o
    0x08000d56   0x08000d56   0x00000002   PAD
    0x08000d58   0x08000d58   0x0000006c   Code   RO            2    .text.main          main.o
    0x08000dc4   0x08000dc4   0x0000003e   Code   RO           26    .text.os_kernel_is_active  clib_arm.o
    0x08000e02   0x08000e02   0x00000002   PAD
    0x08000e04   0x08000e04   0x000000d4   Code   RO          748    .text.prvAddCurrentTaskToDelayedList  tasks_1.o
    0x08000ed8   0x08000ed8   0x00000122   Code   RO          734    .text.prvAddNewTaskToReadyList  tasks_1.o
    0x08000ffa   0x08000ffa   0x00000002   PAD
    0x08000ffc   0x08000ffc   0x0000007e   Code   RO          885    .text.prvCheckForValidListAndQueue  timers_1.o
    0x0800107a   0x0800107a   0x00000002   PAD
    0x0800107c   0x0800107c   0x0000005a   Code   RO          852    .text.prvCheckTasksWaitingTermination  tasks_1.o
    0x080010d6   0x080010d6   0x00000002   PAD
    0x080010d8   0x080010d8   0x00000042   Code   RO          634    .text.prvCopyDataFromQueue  queue_1.o
    0x0800111a   0x0800111a   0x00000002   PAD
    0x0800111c   0x0800111c   0x000000cc   Code   RO          622    .text.prvCopyDataToQueue  queue_1.o
    0x080011e8   0x080011e8   0x0000003c   Code   RO          740    .text.prvDeleteTCB  tasks_1.o
    0x08001224   0x08001224   0x00000026   Code   RO          638    .text.prvGetDisinheritPriorityAfterTimeout  queue_1.o
    0x0800124a   0x0800124a   0x00000002   PAD
    0x0800124c   0x0800124c   0x00000040   Code   RO          923    .text.prvGetNextExpireTime  timers_1.o
    0x0800128c   0x0800128c   0x000000bc   Code   RO          563    .text.prvHeapInit   heap_4_1.o
    0x08001348   0x08001348   0x00000038   Code   RO          774    .text.prvIdleTask   tasks_1.o
    0x08001380   0x08001380   0x0000002c   Code   RO          602    .text.prvInitialiseMutex  queue_1.o
    0x080013ac   0x080013ac   0x00000048   Code   RO          596    .text.prvInitialiseNewQueue  queue_1.o
    0x080013f4   0x080013f4   0x00000102   Code   RO          732    .text.prvInitialiseNewTask  tasks_1.o
    0x080014f6   0x080014f6   0x00000002   PAD
    0x080014f8   0x080014f8   0x0000008e   Code   RO          850    .text.prvInitialiseTaskLists  tasks_1.o
    0x08001586   0x08001586   0x00000002   PAD
    0x08001588   0x08001588   0x000000c6   Code   RO          565    .text.prvInsertBlockIntoFreeList  heap_4_1.o
    0x0800164e   0x0800164e   0x00000002   PAD
    0x08001650   0x08001650   0x00000086   Code   RO          935    .text.prvInsertTimerInActiveList  timers_1.o
    0x080016d6   0x080016d6   0x00000002   PAD
    0x080016d8   0x080016d8   0x00000028   Code   RO          636    .text.prvIsQueueEmpty  queue_1.o
    0x08001700   0x08001700   0x0000002e   Code   RO          624    .text.prvIsQueueFull  queue_1.o
    0x0800172e   0x0800172e   0x00000002   PAD
    0x08001730   0x08001730   0x00000020   Code   RO          541    .text.prvPortStartFirstTask  port_1.o
    0x08001750   0x08001750   0x00000072   Code   RO          931    .text.prvProcessExpiredTimer  timers_1.o
    0x080017c2   0x080017c2   0x00000002   PAD
    0x080017c4   0x080017c4   0x0000013a   Code   RO          927    .text.prvProcessReceivedCommands  timers_1.o
    0x080018fe   0x080018fe   0x00000002   PAD
    0x08001900   0x08001900   0x0000009a   Code   RO          925    .text.prvProcessTimerOrBlockTask  timers_1.o
    0x0800199a   0x0800199a   0x00000002   PAD
    0x0800199c   0x0800199c   0x00000046   Code   RO          742    .text.prvResetNextTaskUnblockTime  tasks_1.o
    0x080019e2   0x080019e2   0x00000002   PAD
    0x080019e4   0x080019e4   0x00000044   Code   RO          929    .text.prvSampleTimeNow  timers_1.o
    0x08001a28   0x08001a28   0x000000b8   Code   RO          933    .text.prvSwitchTimerLists  timers_1.o
    0x08001ae0   0x08001ae0   0x00000026   Code   RO          533    .text.prvTaskExitError  port_1.o
    0x08001b06   0x08001b06   0x00000002   PAD
    0x08001b08   0x08001b08   0x0000001e   Code   RO          887    .text.prvTimerTask  timers_1.o
    0x08001b26   0x08001b26   0x00000002   PAD
    0x08001b28   0x08001b28   0x000000ae   Code   RO          626    .text.prvUnlockQueue  queue_1.o
    0x08001bd6   0x08001bd6   0x00000002   PAD
    0x08001bd8   0x08001bd8   0x0000018c   Code   RO          561    .text.pvPortMalloc  heap_4_1.o
    0x08001d64   0x08001d64   0x0000002c   Code   RO          834    .text.pvTaskIncrementMutexHeldCount  tasks_1.o
    0x08001d90   0x08001d90   0x00000050   Code   RO          531    .text.pxPortInitialiseStack  port_1.o
    0x08001de0   0x08001de0   0x00000048   Code   RO          522    .text.uxListRemove  list_1.o
    0x08001e28   0x08001e28   0x0000002a   Code   RO          204    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x08001e52   0x08001e52   0x00000002   PAD
    0x08001e54   0x08001e54   0x0000002a   Code   RO          206    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x08001e7e   0x08001e7e   0x00000002   PAD
    0x08001e80   0x08001e80   0x0000000a   Code   RO          202    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x08001e8a   0x08001e8a   0x00000002   PAD
    0x08001e8c   0x08001e8c   0x0000002e   Code   RO          514    .text.vListInitialise  list_1.o
    0x08001eba   0x08001eba   0x00000002   PAD
    0x08001ebc   0x08001ebc   0x0000000e   Code   RO          516    .text.vListInitialiseItem  list_1.o
    0x08001eca   0x08001eca   0x00000002   PAD
    0x08001ecc   0x08001ecc   0x0000006a   Code   RO          520    .text.vListInsert   list_1.o
    0x08001f36   0x08001f36   0x00000002   PAD
    0x08001f38   0x08001f38   0x0000003a   Code   RO          518    .text.vListInsertEnd  list_1.o
    0x08001f72   0x08001f72   0x00000002   PAD
    0x08001f74   0x08001f74   0x00000030   Code   RO          545    .text.vPortEnterCritical  port_1.o
    0x08001fa4   0x08001fa4   0x00000026   Code   RO          547    .text.vPortExitCritical  port_1.o
    0x08001fca   0x08001fca   0x00000002   PAD
    0x08001fcc   0x08001fcc   0x00000084   Code   RO          567    .text.vPortFree     heap_4_1.o
    0x08002050   0x08002050   0x00000044   Code   RO          539    .text.vPortSetupTimerInterrupt  port_1.o
    0x08002094   0x08002094   0x00000022   Code   RO          652    .text.vQueueDelete  queue_1.o
    0x080020b6   0x080020b6   0x00000002   PAD
    0x080020b8   0x080020b8   0x00000064   Code   RO          664    .text.vQueueWaitForMessageRestricted  queue_1.o
    0x0800211c   0x0800211c   0x0000004a   Code   RO          752    .text.vTaskDelay    tasks_1.o
    0x08002166   0x08002166   0x00000002   PAD
    0x08002168   0x08002168   0x00000024   Code   RO          806    .text.vTaskInternalSetTimeOutState  tasks_1.o
    0x0800218c   0x0800218c   0x0000000e   Code   RO          810    .text.vTaskMissedYield  tasks_1.o
    0x0800219a   0x0800219a   0x00000002   PAD
    0x0800219c   0x0800219c   0x00000026   Code   RO          794    .text.vTaskPlaceOnEventList  tasks_1.o
    0x080021c2   0x080021c2   0x00000002   PAD
    0x080021c4   0x080021c4   0x00000036   Code   RO          798    .text.vTaskPlaceOnEventListRestricted  tasks_1.o
    0x080021fa   0x080021fa   0x00000002   PAD
    0x080021fc   0x080021fc   0x000000ec   Code   RO          830    .text.vTaskPriorityDisinheritAfterTimeout  tasks_1.o
    0x080022e8   0x080022e8   0x000000c2   Code   RO          772    .text.vTaskStartScheduler  tasks_1.o
    0x080023aa   0x080023aa   0x00000002   PAD
    0x080023ac   0x080023ac   0x00000010   Code   RO          746    .text.vTaskSuspendAll  tasks_1.o
    0x080023bc   0x080023bc   0x00000104   Code   RO          764    .text.vTaskSwitchContext  tasks_1.o
    0x080024c0   0x080024c0   0x00000040   Code   RO          537    .text.xPortStartScheduler  port_1.o
    0x08002500   0x08002500   0x0000003c   Code   RO          551    .text.xPortSysTickHandler  port_1.o
    0x0800253c   0x0800253c   0x00000026   Code   RO          600    .text.xQueueCreateMutex  queue_1.o
    0x08002562   0x08002562   0x00000002   PAD
    0x08002564   0x08002564   0x00000032   Code   RO          604    .text.xQueueCreateMutexStatic  queue_1.o
    0x08002596   0x08002596   0x00000002   PAD
    0x08002598   0x08002598   0x00000058   Code   RO          598    .text.xQueueGenericCreate  queue_1.o
    0x080025f0   0x080025f0   0x0000004a   Code   RO          594    .text.xQueueGenericCreateStatic  queue_1.o
    0x0800263a   0x0800263a   0x00000002   PAD
    0x0800263c   0x0800263c   0x0000009e   Code   RO          592    .text.xQueueGenericReset  queue_1.o
    0x080026da   0x080026da   0x00000002   PAD
    0x080026dc   0x080026dc   0x0000016a   Code   RO          612    .text.xQueueGenericSend  queue_1.o
    0x08002846   0x08002846   0x00000002   PAD
    0x08002848   0x08002848   0x000000be   Code   RO          628    .text.xQueueGenericSendFromISR  queue_1.o
    0x08002906   0x08002906   0x00000002   PAD
    0x08002908   0x08002908   0x00000152   Code   RO          632    .text.xQueueReceive  queue_1.o
    0x08002a5a   0x08002a5a   0x00000002   PAD
    0x08002a5c   0x08002a5c   0x0000019e   Code   RO          616    .text.xQueueSemaphoreTake  queue_1.o
    0x08002bfa   0x08002bfa   0x00000002   PAD
    0x08002bfc   0x08002bfc   0x00000094   Code   RO          808    .text.xTaskCheckForTimeOut  tasks_1.o
    0x08002c90   0x08002c90   0x0000009e   Code   RO          736    .text.xTaskCreate   tasks_1.o
    0x08002d2e   0x08002d2e   0x00000002   PAD
    0x08002d30   0x08002d30   0x00000072   Code   RO          730    .text.xTaskCreateStatic  tasks_1.o
    0x08002da2   0x08002da2   0x00000002   PAD
    0x08002da4   0x08002da4   0x00000038   Code   RO          824    .text.xTaskGetSchedulerState  tasks_1.o
    0x08002ddc   0x08002ddc   0x00000014   Code   RO          780    .text.xTaskGetTickCount  tasks_1.o
    0x08002df0   0x08002df0   0x0000019e   Code   RO          778    .text.xTaskIncrementTick  tasks_1.o
    0x08002f8e   0x08002f8e   0x00000002   PAD
    0x08002f90   0x08002f90   0x000000a6   Code   RO          828    .text.xTaskPriorityDisinherit  tasks_1.o
    0x08003036   0x08003036   0x00000002   PAD
    0x08003038   0x08003038   0x0000010e   Code   RO          826    .text.xTaskPriorityInherit  tasks_1.o
    0x08003146   0x08003146   0x00000002   PAD
    0x08003148   0x08003148   0x000000b2   Code   RO          800    .text.xTaskRemoveFromEventList  tasks_1.o
    0x080031fa   0x080031fa   0x00000002   PAD
    0x080031fc   0x080031fc   0x00000162   Code   RO          750    .text.xTaskResumeAll  tasks_1.o
    0x0800335e   0x0800335e   0x00000002   PAD
    0x08003360   0x08003360   0x00000078   Code   RO          883    .text.xTimerCreateTimerTask  timers_1.o
    0x080033d8   0x080033d8   0x00000094   Code   RO          895    .text.xTimerGenericCommand  timers_1.o
    0x0800346c   0x0800346c   0x00000004   Data   RO          376    .rodata.ADCPrescTable  stm32f10x_rcc.o
    0x08003470   0x08003470   0x00000010   Data   RO          375    .rodata.APBAHBPrescTable  stm32f10x_rcc.o
    0x08003480   0x08003480   0x0000000e   Data   RO           13    .rodata.str1.1      main.o
    0x0800348e   0x0800348e   0x00000005   Data   RO          868    .rodata.str1.1      tasks_1.o
    0x08003493   0x08003493   0x00000008   Data   RO          938    .rodata.str1.1      timers_1.o
    0x0800349b   0x0800349b   0x00000001   PAD
    0x0800349c   0x0800349c   0x00000020   Data   RO         1129    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x080034c0, Size: 0x00003208, Max: 0x00005000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080034c0   0x00000004   Data   RW          466    .data.SystemCoreClock  system_stm32f10x.o
    0x20000004   0x080034c4   0x00000004   Data   RW          553    .data.uxCriticalNesting  port_1.o
    0x20000008        -       0x00000060   Zero   RW          994    .bss                c_w.l(libspace.o)
    0x20000068        -       0x00000190   Zero   RW           39    .bss.clib_mutex_cb  clib_arm.o
    0x200001f8        -       0x00000014   Zero   RW           38    .bss.clib_mutex_id  clib_arm.o
    0x2000020c        -       0x00000001   Zero   RW           40    .bss.os_kernel_is_active.os_kernel_active  clib_arm.o
    0x2000020d        -       0x00000050   Zero   RW          946    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers_1.o
    0x2000025d   0x080034c8   0x00000003   PAD
    0x20000260        -       0x00000050   Zero   RW          945    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers_1.o
    0x200002b0        -       0x00000004   Zero   RW          942    .bss.prvSampleTimeNow.xLastTime  timers_1.o
    0x200002b4        -       0x00000004   Zero   RW          854    .bss.pxCurrentTCB   tasks_1.o
    0x200002b8        -       0x00000004   Zero   RW          940    .bss.pxCurrentTimerList  timers_1.o
    0x200002bc        -       0x00000004   Zero   RW          861    .bss.pxDelayedTaskList  tasks_1.o
    0x200002c0        -       0x00000004   Zero   RW          577    .bss.pxEnd          heap_4_1.o
    0x200002c4        -       0x00000004   Zero   RW          862    .bss.pxOverflowDelayedTaskList  tasks_1.o
    0x200002c8        -       0x00000004   Zero   RW          941    .bss.pxOverflowTimerList  timers_1.o
    0x200002cc        -       0x00000460   Zero   RW          864    .bss.pxReadyTasksLists  tasks_1.o
    0x2000072c        -       0x00002000   Zero   RW          584    .bss.ucHeap         heap_4_1.o
    0x2000272c        -       0x00000004   Zero   RW          858    .bss.uxCurrentNumberOfTasks  tasks_1.o
    0x20002730        -       0x00000004   Zero   RW          857    .bss.uxDeletedTasksWaitingCleanUp  tasks_1.o
    0x20002734        -       0x00000004   Zero   RW          866    .bss.uxSchedulerSuspended  tasks_1.o
    0x20002738        -       0x00000004   Zero   RW          855    .bss.uxTaskNumber   tasks_1.o
    0x2000273c        -       0x00000004   Zero   RW          865    .bss.uxTopReadyPriority  tasks_1.o
    0x20002740        -       0x00000200   Zero   RW          213    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x20002940        -       0x0000005c   Zero   RW          212    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x2000299c        -       0x00000140   Zero   RW          215    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002adc        -       0x0000005c   Zero   RW          214    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002b38        -       0x00000014   Zero   RW          943    .bss.xActiveTimerList1  timers_1.o
    0x20002b4c        -       0x00000014   Zero   RW          944    .bss.xActiveTimerList2  timers_1.o
    0x20002b60        -       0x00000004   Zero   RW          578    .bss.xBlockAllocatedBit  heap_4_1.o
    0x20002b64        -       0x00000014   Zero   RW          874    .bss.xDelayedTaskList1  tasks_1.o
    0x20002b78        -       0x00000014   Zero   RW          875    .bss.xDelayedTaskList2  tasks_1.o
    0x20002b8c        -       0x00000004   Zero   RW          579    .bss.xFreeBytesRemaining  heap_4_1.o
    0x20002b90        -       0x00000004   Zero   RW          869    .bss.xIdleTaskHandle  tasks_1.o
    0x20002b94        -       0x00000004   Zero   RW          581    .bss.xMinimumEverFreeBytesRemaining  heap_4_1.o
    0x20002b98        -       0x00000004   Zero   RW           12    .bss.xMutex         main.o
    0x20002b9c        -       0x00000004   Zero   RW          870    .bss.xNextTaskUnblockTime  tasks_1.o
    0x20002ba0        -       0x00000004   Zero   RW          873    .bss.xNumOfOverflows  tasks_1.o
    0x20002ba4        -       0x00000004   Zero   RW          582    .bss.xNumberOfSuccessfulAllocations  heap_4_1.o
    0x20002ba8        -       0x00000004   Zero   RW          583    .bss.xNumberOfSuccessfulFrees  heap_4_1.o
    0x20002bac        -       0x00000004   Zero   RW          872    .bss.xPendedTicks   tasks_1.o
    0x20002bb0        -       0x00000014   Zero   RW          867    .bss.xPendingReadyList  tasks_1.o
    0x20002bc4        -       0x00000004   Zero   RW          859    .bss.xSchedulerRunning  tasks_1.o
    0x20002bc8        -       0x00000008   Zero   RW          580    .bss.xStart         heap_4_1.o
    0x20002bd0        -       0x00000014   Zero   RW          863    .bss.xSuspendedTaskList  tasks_1.o
    0x20002be4        -       0x00000014   Zero   RW          856    .bss.xTasksWaitingTermination  tasks_1.o
    0x20002bf8        -       0x00000004   Zero   RW          860    .bss.xTickCount     tasks_1.o
    0x20002bfc        -       0x00000004   Zero   RW          937    .bss.xTimerQueue    timers_1.o
    0x20002c00        -       0x00000004   Zero   RW          939    .bss.xTimerTaskHandle  timers_1.o
    0x20002c04        -       0x00000004   Zero   RW          871    .bss.xYieldPending  tasks_1.o
    0x20002c08        -       0x00000200   Zero   RW          449    HEAP                startup_stm32f10x_md.o
    0x20002e08        -       0x00000400   Zero   RW          448    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       370          0          0          0        421       3307   clib_arm.o
       124          0          0          0       1016      39784   cmsis_os2.o
       914          0          0          0       8224       4145   heap_4_1.o
       296          0          0          0          0       2314   list_1.o
       466          0         14          0          4       3243   main.o
       532         12          0          4          0       2704   port_1.o
      2530          0          0          0          0      14141   queue_1.o
        64         26        236          0       1536        800   startup_stm32f10x_md.o
       390          0          0          0          0       5701   stm32f10x_gpio.o
       426          0         20          0          0       7029   stm32f10x_rcc.o
       416          0          0          0          0       7502   stm32f10x_usart.o
       400          0          0          4          0       2957   system_stm32f10x.o
      4022          0          5          0       1280      22055   tasks_1.o
      1456         10          8          0        220      10465   timers_1.o

    ----------------------------------------------------------------------
     12520         48        316          8      12704     126147   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       114          0          1          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       664         16          0          0         96        880   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       654         16          0          0         96        880   c_w.l

    ----------------------------------------------------------------------
       664         16          0          0         96        880   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13184         64        316          8      12800     126539   Grand Totals
     13184         64        316          8      12800     126539   ELF Image Totals
     13184         64        316          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13500 (  13.18kB)
    Total RW  Size (RW Data + ZI Data)             12808 (  12.51kB)
    Total ROM Size (Code + RO Data + RW Data)      13508 (  13.19kB)

==============================================================================

